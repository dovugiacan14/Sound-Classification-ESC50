import os
import librosa
import logging 
import pandas as pd
import numpy as np 

#  ========================= PART 1 =============================

# df = pd.read_csv('processed_meta.csv')
# df['fold'] = df['fold'].apply(lambda x: np.random.randint(1, 6) if pd.isna(x) else x)

# df.to_csv('data_filled.csv', index=False)

#  ========================= PART 2 =============================
# ƒê·ªçc d·ªØ li·ªáu
df = pd.read_csv("data_filled.csv")

# C√°c c·ªôt ƒë·∫∑c tr∆∞ng √¢m thanh
feature_columns = [
    "zero_crossing_rate", "chroma_stft", "rmse", "spectral_centroid",
    "spectral_bandwidth", "beat_per_minute", "rolloff",
    "mfcc_0", "mfcc_1", "mfcc_2", "mfcc_3", "mfcc_4", "mfcc_5", "mfcc_6",
    "mfcc_7", "mfcc_8", "mfcc_9", "mfcc_10", "mfcc_11", "mfcc_12",
    "mfcc_13", "mfcc_14", "mfcc_15", "mfcc_16", "mfcc_17", "mfcc_18", "mfcc_19"
]

# Kh·ªüi t·∫°o danh s√°ch ch·ª©a d·ªØ li·ªáu theo t·ª´ng fold
output_dict = [[] for _ in range(5)]

# L·∫∑p qua t·ª´ng d√≤ng trong DataFrame ƒë·ªÉ l·∫•y d·ªØ li·ªáu
for _, row in df.iterrows():
    name = os.path.basename(row["files_path"]) 
    fold = int(row["fold"])  
    target = int(row["target"])  
    y = row[feature_columns].values.astype(np.float32)  

    # L∆∞u v√†o danh s√°ch t∆∞∆°ng ·ª©ng v·ªõi fold
    output_dict[fold - 1].append({"name": name, "target": target, "waveform": y})

# Chu·∫©n h√≥a s·ªë l∆∞·ª£ng m·∫´u v·ªÅ 3200 m·ªói fold
TARGET_SIZE = 3200
for i in range(5):
    current_size = len(output_dict[i])

    if current_size < TARGET_SIZE:
        # üîπ B·ªï sung d·ªØ li·ªáu b·∫±ng c√°ch l·∫∑p l·∫°i ng·∫´u nhi√™n
        while len(output_dict[i]) < TARGET_SIZE:
            output_dict[i].append(output_dict[i][np.random.randint(0, current_size)])

    elif current_size > TARGET_SIZE:
        # üîπ C·∫Øt b·ªõt d·ªØ li·ªáu
        output_dict[i] = output_dict[i][:TARGET_SIZE]

    print(f"‚úÖ Fold {i+1} c√≥ {len(output_dict[i])} ph·∫ßn t·ª≠ sau chu·∫©n h√≥a")

# L∆∞u d·ªØ li·ªáu th√†nh file .npy
np.save("dataset.npy", np.array(output_dict, dtype=object), allow_pickle=True)
